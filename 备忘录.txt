version1:
1.花期有限
2.登陆页
背景图
用户名
密码
跳转 
3.item 数据结构
{
    name:'xxx'
    flowerLang:'真爱 永生'
    tip:'爆款，买一送一'
    color：'red/pink/yellow/purple/white/blue/champagne'
    class：'Herb草本/Woody木本/Potted盆栽/view观赏/Fresh cut鲜切'
    price:'23'(元)
    format:{
        otherColor:[],
        reserver:8000
    }
    img:'/xxx.png'
}
4.item 查询，选择
【添加】购物车 <底部弹窗>
【收藏】个人中心

5.结算页
【修改】
【删除】
6.个人中心
名称
电话
地址（增删改查）
收藏列表
订单列表

https://www.zw3e.com/982/e8872.html
http://www.360doc.com/content/18/0403/12/7241302_742511097.shtml
https://www.hua.com/shierduomeigui/
https://www.jianshu.com/p/a0ae81e1942a
https://www.jianshu.com/p/f77b88b9cf40

version2:
详情页
分类
收藏管理（列表页，删除）

数据劫持vue3.0改用proxy原因
defineProperty只能监听某个属性，不能对全对象监听，使用proxy可以省去for in提升效率
可以监听数组，不用再去单独的对数组做特异性操作

proxy 用于数据校验

var personValidator = {
    name(val){
        return typeof val === 'string'
    }
    age(val){
        return typeof val === 'number' && val>18
    }
}
class person{
    constructor(name,age){
        this.name = name;
        this.age = age;
        return createValidator(this,personValidator)
    }
}
function createValidator(target,validator){
    return new Proxy(target,{
        _validator:validator,
        set(target,key,value,proxy){
            if(target.hasOwnproperty(key)){
                var validator = this._validator[key]
                if(validator(value)){
                    return Reflect.set(target,key,value,proxy)
                }else{
                    throw Error('type error')
                }
            }
        }
    })
}

//英文单词统计出现频率
function getResult(str){
    let words = str.match(/\b[a-zA-Z\'\_\-]+\b/ig)
    if(!words || words.length===1){
        console.log('what you get is what you see ~')
        return words
    }
    let obj = {}
    words.map(item=>{
        let lower = item.toLowerCase()
        obj[lower] = obj[lower] ? ++obj[lower] : 1
    })
    words = []
    Object.keys(obj).sort().sort(function(a,b){
        return obj[b]-obj[a]
    }).slice(0,20).map(key=>{
        console.log(key+' '+obj[key])
        words.push(key+':'+obj[key])
    })
    return words
}






