/**
 * 菲波那契数列类型题目套路
 * 
 * 对于整个题目的求解过程中
 * 后面的项的结果的值完全依赖于前面几项结果的值，没有任何条件转移的情况
 * 都会存在时间复杂度为O(logN)的算法
 * 条件转移是指，当N等于特定某些值时进行不同操作的情况
 * 例如，斐波那契数列存在这样的关系
 * f(n) = f(n-1) + f(n-2);
 * 利用线性代数的原理，可以知道
 *                               |a b|
 * | f(3)  f(2)| = |f(2) f(1)| * |c d|
 *                               |a b|
 * | f(4)  f(3)| = |f(3) f(2)| * |c d|
 * 而且利用初始项的值，可以把abcd的值求出来
 * 最终可以得到这样的关系
 * 
 *                                 (|a b|)
 * | f(n)  f(n-1)| = |f(2) f(1)| * (|c d|) ^ n-2
 * 
 * 最终得到只要这个矩阵n次方计算的比较快，就可以很快得到f(n)的结果
 * (|a b|)
 * (|c d|) ^ n-2
 * 
 * 快速算一个数x的n次方可以采用拆解的方式，将n次方拆解成比n小的次方相乘，就是指数相加的过程
 * 将n 转化成二进制，循环这个二进制字符串长度，在相应的位i求解x^i,r如果i对应的二进制位不是0,
 * 就乘到结果中去
 * 例如 10 ^ 75,75的二进制是1001011
 * result = 1* 10 ^ (2^ 0)* 10 ^(2^1) * 10^(2^3) * 10^(2^6)
 * 矩阵的N次方也可以这样求解只不过将1换成单位矩阵即可
 * 这样就将求解f(n) 的过程转换成求解矩阵n次方的过程，时间复杂度成为O(logn)
 * 
 * 同样假如目标结果跟它的前几项有这样的关系
 * f(n) = 3f(n-1) + 4f(n-2) - 2f(n-3)+3f(n-5)
 * 那么可以推出f(n)的连续5项之间有这样的关系
 * |f(n) ~ f(n-4)| = |f(5)~f(1)| * |5*5| ^(n-5) 
 * |5*5| 表示5 * 5的矩阵
 * 同样5*5矩阵里面的每一项可以利用前几项的值进行求解
 * 
 * 
 */

/**
 * 加入牧场可以控制母牛的生产数量和生产性别
 * 每年可以生产一次
 * 每次生产只会生产一只小母牛
 * 小母牛经过三年成长才可以再生产小小母牛
 * 生产规则同母牛一样
 * 请问N年后可以收获多少只母牛
 * (忽略母牛死亡情况，假设母牛不会死)
 * 
 * 思路：
 * 第 n年牛的数量符合这样的关系，
 * 第n年的牛等于上一年的牛加上前3年的牛的数量，因为小母牛经过3年才可以生产
 * f(n-3)保证新生产的母牛数量(3年的母牛都可以生产)，f(n-1)保证已有的母牛数量
 * 
 * f(n) = f(n-1) + f(n-3)
 * 
 * ===>
 * 
 * |f(n) f(n-1) f(n-2) | = |f(3) f(2) f(1)| * |3*3| ^(n-3)
 */

/**
 * 加入兔子场的兔子
 * 一年生产一次
 * 每次可以生产2只兔子
 * 小兔子经过2年后可以生产小小兔子
 * 请问N年后还可以收获多少只兔子
 * 假设兔子活5年就会死
 * 
 * 思路：
 * f(n) = f(n-1) + 2f(n-2) - f(n-5)
 */

/**
 * 字符串中只有0和1两种字符
 * 如果一个字符串中只要是出现0的位置，左边就靠着1，这样的字符串叫做达标字符串
 * 给定一个正数N，返回所以的长度为N的字符串中，达标字符串的数量
 * 比如N = 3，返回3，只有'101','110','111' 达标
 * 
 * 思路：
 * 从左到右第一位只能是1，剩下的n-1位，的首位可能是1，可能是0
 * 是1的时候结果变成f(n-1)有多少可能性
 * 是0的时候，剩下的n-2位的首位只能是1，变成f(n-2)有多少可能性
 * 最终
 * f(n) = f(n-1) + f(n-2)
 */

/**
 * 现有N根木棍，第i根木棍的长度为i
 * 请问至少要去掉多少根木棍才能使得剩下的木棍无法组成三角形？
 * 
 * 思路：
 * 从左往右，左边的木棍肯定当小边
 * 三角形任意两边之和大于第三边，两个小边之和肯定要大于后面的大边才能组成三角形
 * 转化成斐波那契数列问题，让小边之和等于第三边
 * N根木棍中看有多少根木棍属于斐波那契数列中数字的长度的木棍
 * 保留属于的，去除不属于的就是至少要去掉的根数
 */

/**
 * 假设背包容量为w
 * 现有N带零食，第i带零食体积为v[i]
 * 请问在不超过背包容量的情况下，一共有多少可以放粮食的方法
 * 
 */

/**
 * 现在有一个描述工作情况的池子，每项工作包括该工作需要的难度和报酬、
 * job: [{hard: 20, money: 15}]
 * 现在有N个人需要找工作，arr[i]代表第i个人的工作能力
 * 工作能力大于等于工作难度才可以胜任工作
 * 每个人要能拿到尽可能多的报酬
 * 请问这个N个人最终可以拿到的报酬可以是多少？
 * 
 * 输入job,arr，返回N个人最高报酬集合
 * 
 */

 /**
  * 给定一个字符串，如果一个字符串符合人们日常书写一个整数的形式，
  * 返回数字类型的这个数，如果不符合，返回-1 或者报错
  */