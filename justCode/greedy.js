/**
 * 贪心算法
 * 在一个标准下，优先考虑最满足标准的样本，最后考虑最不满足标准的样本，
 * 最终得到一个答案的算法，叫做贪心算法
 * 
 * 也就是，一开始不以整体最优上加以考虑，所做出的是在某种意义上的局部最优解
 * 由局部最优解推导出整体最优解
 * 
 * 解题思路
 * 1. 实现一个不依靠贪心策略的解法X，可以用最暴力的方式尝试实现
 * 2.脑补出贪心策略A,B,C
 * 3.用解法X和对数器，去验证每一个贪心策略，用实验的方式证明那个贪心策略正确
 * 4.不用太纠结贪心策略的证明
 * 
 * 实现技巧
 * 1.根据某个标准建立一个比较器来排序
 * 2.根据某个标准建立一个比较器来组成堆
 */

/**
 * 题目：
 * 一些项目要占用一个会议室进行宣讲，会议室不能同时容纳两个项目的宣讲
 * 给定所有项目的开始和结束时间，如何安排会议可以使得会议室进行的宣讲场次最多
 * 返回这个最多的宣讲场次
 * 
 */



/***
 * 题目：
 * 将一块金条切成两半，需要花费和金条长度一样数值的铜板
 * 比如长度为20的金条，不管切成长度多大的两半，都要花费20个铜板
 * 
 * 现在有一群人想整分整块金条，怎么分最省铜板？
 * 
 * 例如，给定一个数组[10,20,30]代表一共三个人，整块金条长度为10+20+30 = 60
 * 金条要分成10,20,30的三个长度，
 * 如果先把长度60的金条分成10和50，花费60，
 * 再把50分为20和30，又花费50，一共将花费110；
 * 但是如果先将60金块切成30+30，花费60，
 * 再将30切成10 + 20，花费30，一共将花费90，
 * 
 * 现在输入一个数字组成的数组，返回最小的分割金条需要的铜板数
 * 
 */

/***
 * 题目：
 * 输入
 * 正数数组costs,costs[i] 表示i号项目的花费，
 * 正数数组profits,profits[i] 表示i号项目在扣除花费之后还能挣到的钱(利润)
 * 正数K, 表示只能串行的最多做K个项目
 * 正数M，表示初始的资金
 * 每做完一个项目，马上可以获得收益，可以支持做下一个项目
 * 
 * 输出：最后可以获得的最大钱数
 * 
 */



/**
 * 题目：
 * 一个数组流中，随时可以取得中位数
 * 
 */


/***
 * 题目：
 * N皇后问题
 * 在N*N的棋盘上要摆N个皇后，要求任何两个皇后不同行，不同列，也不再同一条斜线上
 * 给定一个整数N，返回N皇后的摆法有多少种
 * n = 1,返回1；
 * n = 2 或者3，无法实现，返回0；
 * n = 8,返回92
 */